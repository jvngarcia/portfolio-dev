---
import HomeIcon from "../icons/HomeIcon.astro";
import TieIcon from "../icons/TieIcon.astro";
import BriefcaseIcon from "../icons/BriefcaseIcon.astro";
import SchoolIcon from "../icons/SchoolIcon.astro";

interface MenuItem {
  name: string;
  icon: any;
  tooltip: string;
  link: string;
}

const styles = {
  formBar:
    "fixed bottom-6 left-1/2 -translate-x-2/4 z-50 transition-all duration-700",
  formBarContent:
    "flex gap-2 flex-row bg-black px-4 py-2 rounded-full transition-all duration-700",
  formBarItem: "transition-all duration-300 rounded-full px-2 py-2",
  fromBarItemIcon:
    "stroke-gray-600 hover:stroke-primary-400 transition-all duration-300",
  tooltip:
    "absolute z-10 invisible inline-block px-3 py-2 text-sm font-medium text-white bg-zinc-900 rounded-lg shadow-sm opacity-0 tooltip dark:bg-gray-700",
  tooltipArrow: "tooltip-arrow",
};

const menu: MenuItem[] = [
  {
    name: "Home",
    icon: HomeIcon,
    tooltip: "tooltip-home",
    link: "/",
  },
  {
    name: "Side Projects",
    icon: BriefcaseIcon,
    tooltip: "tooltip-sideprojects",
    link: "#top-projects",
  },
  {
    name: "Jobs",
    icon: TieIcon,
    tooltip: "tooltip-jobs",
    link: "#job-timeline",
  },
  {
    name: "Applied Studies",
    icon: SchoolIcon,
    tooltip: "tooltip-studies",
    link: "#studies-timeline",
  },
];
---

<div id="form-bar" class={styles.formBar}>
  <div class={styles.formBarContent}>
    {
      menu.map((item) => (
        <>
          <a
            href={item.link}
            data-tooltip-target={item.tooltip}
            class={styles.formBarItem}
          >
            <item.icon className={styles.fromBarItemIcon} />
          </a>
          <div id={item.tooltip} role="tooltip" class={styles.tooltip}>
            {item.name}
            <div class={styles.tooltipArrow} data-popper-arrow />
          </div>
        </>
      ))
    }
  </div>
</div>

<script>
  import { Tooltip } from "flowbite";
  import type { TooltipOptions, TooltipInterface } from "flowbite";
  import type { InstanceOptions } from "flowbite";

  // set the tooltip content element
  const $targetEl: HTMLElement | null =
    document.getElementById("tooltipContent");

  // set the element that trigger the tooltip using hover or click
  const $triggerEl: HTMLElement | null =
    document.getElementById("tooltipButton");

  // options with default values
  const options: TooltipOptions = {
    placement: "top",
    triggerType: "hover",
    onHide: () => {
      console.log("tooltip is shown");
    },
    onShow: () => {
      console.log("tooltip is hidden");
    },
    onToggle: () => {
      console.log("tooltip is toggled");
    },
  };

  // instance options with default values
  const instanceOptions: InstanceOptions = {
    id: "tooltipContent",
    override: true,
  };

  /*
   * targetEl: required
   * triggerEl: required
   * options: optional
   */
  const tooltip: TooltipInterface = new Tooltip(
    $targetEl,
    $triggerEl,
    options,
    instanceOptions
  );

  // show the tooltip
  tooltip.show();
</script>
